import{s as z,h as k,i as T,n as G}from"../chunks/scheduler.e373e2eb.js";import{S as N,i as B,r as R,u as U,v as W,d as Z,t as q,w as K,g as F,s as y,H as j,h as i,j as $,A as w,c as v,F as H,f as x,a as O,y as t}from"../chunks/index.dd718910.js";import{P as Q,g as V,a as b}from"../chunks/post_layout.74d79b4d.js";function X(d){let e,a,o='<p>throw</p> <p><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Statements/throw" rel="nofollow noopener noreferrer external" target="_blank">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Statements/throw</a></p> <p>throw 문을 사용하면 예외 처리를 할 수 있는데, throw 가 실행되면, 코드의 실행이 중지되고 catch 블록으로 전달되게 된다.</p>',r,s,l="<p>error</p> <p>Error 객체는 에러를 나타낼 때 사용하는 객체로 아래와 같은 속성을 가지고 있다.</p> <ul><li>name : 에러명</li> <li>message : 에러 설명</li> <li>stack : <code>${error.name}: ${error.message}</code></li> <li>cause : Error 객체를 생성할 때, 발생한 이유를 추가. 데이터 타입은 상관 없음</li></ul>",u,p,E,M="에러 객체 생성하는 방법",S,f,P=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">throw</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">new</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Error</span><span style="color: #EEFFFF">(MESSAGE</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #EEFFFF"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> NAME</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #F07178">cause</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #EEFFFF"> CAUSE </span><span style="color: #89DDFF">&#125;</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#125;</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #546E7A">// error.stack -&gt; NAME: MESSAGE</span></div></code></div></pre>`,C,c,m,A="특정 데이터를 전달하고자 하는 경우, 에러 객체를 사용하지 않고 throw를 할 수도 있다.",L,h,J=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">throw</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> NAME</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #F07178">message</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> MESSAGE</span></div><div class='line'><span style="color: #89DDFF">&#125;;</span></div></code></div></pre>`;return{c(){e=F("ul"),a=F("li"),a.innerHTML=o,r=y(),s=F("li"),s.innerHTML=l,u=y(),p=F("li"),E=F("p"),E.textContent=M,S=y(),f=new j(!1),C=y(),c=F("li"),m=F("p"),m.textContent=A,L=y(),h=new j(!1),this.h()},l(_){e=i(_,"UL",{});var n=$(e);a=i(n,"LI",{"data-svelte-h":!0}),w(a)!=="svelte-16t0uzc"&&(a.innerHTML=o),r=v(n),s=i(n,"LI",{"data-svelte-h":!0}),w(s)!=="svelte-1ay1poj"&&(s.innerHTML=l),u=v(n),p=i(n,"LI",{});var g=$(p);E=i(g,"P",{"data-svelte-h":!0}),w(E)!=="svelte-1j0d301"&&(E.textContent=M),S=v(g),f=H(g,!1),g.forEach(x),C=v(n),c=i(n,"LI",{});var D=$(c);m=i(D,"P",{"data-svelte-h":!0}),w(m)!=="svelte-1l1mnkl"&&(m.textContent=A),L=v(D),h=H(D,!1),D.forEach(x),n.forEach(x),this.h()},h(){f.a=null,h.a=null},m(_,n){O(_,e,n),t(e,a),t(e,r),t(e,s),t(e,u),t(e,p),t(p,E),t(p,S),f.m(P,p),t(e,C),t(e,c),t(c,m),t(c,L),h.m(J,c)},p:G,d(_){_&&x(e)}}}function Y(d){let e,a;const o=[d[0],I];let r={$$slots:{default:[X]},$$scope:{ctx:d}};for(let s=0;s<o.length;s+=1)r=k(r,o[s]);return e=new Q({props:r}),{c(){R(e.$$.fragment)},l(s){U(e.$$.fragment,s)},m(s,l){W(e,s,l),a=!0},p(s,[l]){const u=l&1?V(o,[l&1&&b(s[0]),l&0&&b(I)]):{};l&2&&(u.$$scope={dirty:l,ctx:s}),e.$set(u)},i(s){a||(Z(e.$$.fragment,s),a=!0)},o(s){q(e.$$.fragment,s),a=!1},d(s){K(e,s)}}}const I={title:"Error 메세지 작성방법",image:"",alt:"",created:"2024-02-06T00:00:00.000Z",updated:"2024-02-06T00:00:00.000Z",tags:["Error"],images:[],slug:"/Javascript/TIL/error_handling/+page.md",path:"/Javascript/TIL/error_handling",toc:!1};function ee(d,e,a){return d.$$set=o=>{a(0,e=k(k({},e),T(o)))},e=T(e),[e]}class le extends N{constructor(e){super(),B(this,e,ee,Y,z,{})}}export{le as component};
