import{s as j,h,i as D,n as P}from"../chunks/scheduler.4680106d.js";import{S as k,i as M,r as T,u as C,v as b,d as w,t as H,w as L,g as v,s as _,H as I,h as y,A as E,c as f,F as J,a as i,f as F}from"../chunks/index.3f2093f8.js";import{P as S,g as Z,a as A}from"../chunks/post_layout.471dfd87.js";import{T as q}from"../chunks/table.e225a9a2.js";function B(r){let t,o="<tr><th>함수 호출 방식</th> <th>this가 가리키는 값</th></tr>",n,l,s="<tr><td>일반 함수</td> <td>전역 객체</td></tr> <tr><td>메서드</td> <td>메서드를 호출한 객체</td></tr> <tr><td>생성자 함수</td> <td>생성자가 생성할 인스턴스</td></tr>";return{c(){t=v("thead"),t.innerHTML=o,n=_(),l=v("tbody"),l.innerHTML=s},l(a){t=y(a,"THEAD",{"data-svelte-h":!0}),E(t)!=="svelte-16s0d5h"&&(t.innerHTML=o),n=f(a),l=y(a,"TBODY",{"data-svelte-h":!0}),E(l)!=="svelte-1du37mo"&&(l.innerHTML=s)},m(a,c){i(a,t,c),i(a,n,c),i(a,l,c)},p:P,d(a){a&&(F(t),F(n),F(l))}}}function O(r){let t,o="this는 자기 참조 변수이다. this 바인딩은 호출 방식에 따라서 동적으로 결정된다.",n,l,s,a,c=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">test</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;&#125;</span></div><div class='line'><span style="color: #C792EA">const</span><span style="color: #EEFFFF"> obj </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #EEFFFF"> test </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #546E7A">// 일반 함수 호출</span></div><div class='line'><span style="color: #82AAFF">test</span><span style="color: #EEFFFF">()</span></div><div class='line'><span style="color: #546E7A">//메서드 호출</span></div><div class='line'><span style="color: #EEFFFF">obj</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">test</span><span style="color: #EEFFFF">()</span></div><div class='line'><span style="color: #546E7A">//생성자 함수 호출</span></div><div class='line'><span style="color: #C792EA">const</span><span style="color: #EEFFFF"> hello </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">new</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">test</span><span style="color: #EEFFFF">()</span><span style="color: #89DDFF">;</span></div></code></div></pre>`,u,d,$="new 연산자를 이용해 호출 시, 생성자 함수로서 동작",m;return l=new q({props:{$$slots:{default:[B]},$$scope:{ctx:r}}}),{c(){t=v("p"),t.textContent=o,n=_(),T(l.$$.fragment),s=_(),a=new I(!1),u=_(),d=v("p"),d.textContent=$,this.h()},l(e){t=y(e,"P",{"data-svelte-h":!0}),E(t)!=="svelte-6n7k3w"&&(t.textContent=o),n=f(e),C(l.$$.fragment,e),s=f(e),a=J(e,!1),u=f(e),d=y(e,"P",{"data-svelte-h":!0}),E(d)!=="svelte-dhvuk9"&&(d.textContent=$),this.h()},h(){a.a=u},m(e,p){i(e,t,p),i(e,n,p),b(l,e,p),i(e,s,p),a.m(c,e,p),i(e,u,p),i(e,d,p),m=!0},p(e,p){const g={};p&2&&(g.$$scope={dirty:p,ctx:e}),l.$set(g)},i(e){m||(w(l.$$.fragment,e),m=!0)},o(e){H(l.$$.fragment,e),m=!1},d(e){e&&(F(t),F(n),F(s),a.d(),F(u),F(d)),L(l,e)}}}function Y(r){let t,o;const n=[r[0],x];let l={$$slots:{default:[O]},$$scope:{ctx:r}};for(let s=0;s<n.length;s+=1)l=h(l,n[s]);return t=new S({props:l}),{c(){T(t.$$.fragment)},l(s){C(t.$$.fragment,s)},m(s,a){b(t,s,a),o=!0},p(s,[a]){const c=a&1?Z(n,[a&1&&A(s[0]),a&0&&A(x)]):{};a&2&&(c.$$scope={dirty:a,ctx:s}),t.$set(c)},i(s){o||(w(t.$$.fragment,s),o=!0)},o(s){H(t.$$.fragment,s),o=!1},d(s){L(t,s)}}}const x={title:"this 바인딩",image:"",alt:"",created:"2024-02-18T00:00:00.000Z",updated:"2024-02-18T00:00:00.000Z",tags:["this"],images:[],slug:"/Javascript/TIL/this/+page.md",path:"/Javascript/TIL/this",toc:!1};function z(r,t,o){return r.$$set=n=>{o(0,t=h(h({},t),D(n)))},t=D(t),[t]}class R extends k{constructor(t){super(),M(this,t,z,Y,j,{})}}export{R as component};
