import{s as ps,h as K,i as ss,n as Fs}from"../chunks/scheduler.dd918b38.js";import{S as rs,i as cs,r as is,u as ds,v as vs,d as ys,t as Ds,w as Es,g as n,s as i,H as J,h as o,A as f,c as d,j as w,F as V,f as p,a as _,y as t}from"../chunks/index.94d1baeb.js";import{P as us,g as ms,a as es}from"../chunks/post_layout.0e7f7691.js";function fs(g){let s,v="vite에서 환경 변수를 사용하기 위해서는 import.meta.env를 사용해야 하는데, jest에서는 import 구문이 호환이 되지 않아 찾아보게 되었다.",c,F,e,a,T="vite-plugin-environment 라는 라이브러리를 설치한다.",Z,b,ts=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">npm i --save-dev vite-plugin-environment       </span></div></code></div></pre>`,q,y,h,N="<code>vite.config.ts</code>라는 파일을 위와 같이 설정한다.",z,k,as=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" ts="true"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">defineConfig</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#125;</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">vite</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> react </span><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">@vitejs/plugin-react</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> EnvironmentPlugin </span><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">vite-plugin-environment</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #546E7A">// https://vitejs.dev/config/</span></div><div class='line'><span style="color: #89DDFF">export</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">default</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">defineConfig</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> [</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">react</span><span style="color: #EEFFFF">()</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">EnvironmentPlugin</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">all</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">  ]</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #F07178">define</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">'</span><span style="color: #F07178">process.env</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> process</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">env</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">&#125;,</span></div><div class='line'><span style="color: #89DDFF">&#125;</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">;</span></div><div class='line'></div></code></div></pre>`,j,C,Q=`위와 같이 설정하면, <code>{"BASE_URL":"./","MODE":"production","DEV":false,"PROD":true,"SSR":false}</code> =&gt; <code>process.env</code>로 바꾸어도 잘 적용이 된다.
<del>그런데 jest에는 undefined라고 나온다…</del>`,A,E,W="jest가 구동되는 환경과, react가 구동되는 환경이 달라서 발생되는 문제였다. process.env를 사용하기 위해서는",H,D,u,x,X="dotenv를 설치한다.",B,$,ns=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">npm i -D dotenv</span></div></code></div></pre>`,U,m,L,Y="<code>jest.setup.ts</code>를 수정한다.",G,I,os=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" ts="true"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">@testing-library/jest-dom</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">dotenv/config</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">;</span></div></code></div></pre>`;return{c(){s=n("p"),s.textContent=v,c=i(),F=n("ol"),e=n("li"),a=n("p"),a.textContent=T,Z=i(),b=new J(!1),q=i(),y=n("li"),h=n("p"),h.innerHTML=N,z=i(),k=new J(!1),j=i(),C=n("p"),C.innerHTML=Q,A=i(),E=n("p"),E.textContent=W,H=i(),D=n("ol"),u=n("li"),x=n("p"),x.textContent=X,B=i(),$=new J(!1),U=i(),m=n("li"),L=n("p"),L.innerHTML=Y,G=i(),I=new J(!1),this.h()},l(l){s=o(l,"P",{"data-svelte-h":!0}),f(s)!=="svelte-1oon0zn"&&(s.textContent=v),c=d(l),F=o(l,"OL",{});var r=w(F);e=o(r,"LI",{});var M=w(e);a=o(M,"P",{"data-svelte-h":!0}),f(a)!=="svelte-1m28wp4"&&(a.textContent=T),Z=d(M),b=V(M,!1),M.forEach(p),q=d(r),y=o(r,"LI",{});var P=w(y);h=o(P,"P",{"data-svelte-h":!0}),f(h)!=="svelte-ookt2o"&&(h.innerHTML=N),z=d(P),k=V(P,!1),j=d(P),C=o(P,"P",{"data-svelte-h":!0}),f(C)!=="svelte-1iic6lf"&&(C.innerHTML=Q),P.forEach(p),r.forEach(p),A=d(l),E=o(l,"P",{"data-svelte-h":!0}),f(E)!=="svelte-1l5p74v"&&(E.textContent=W),H=d(l),D=o(l,"OL",{});var S=w(D);u=o(S,"LI",{});var O=w(u);x=o(O,"P",{"data-svelte-h":!0}),f(x)!=="svelte-178e32k"&&(x.textContent=X),B=d(O),$=V(O,!1),O.forEach(p),U=d(S),m=o(S,"LI",{});var R=w(m);L=o(R,"P",{"data-svelte-h":!0}),f(L)!=="svelte-snlwpi"&&(L.innerHTML=Y),G=d(R),I=V(R,!1),R.forEach(p),S.forEach(p),this.h()},h(){b.a=null,k.a=j,$.a=null,I.a=null},m(l,r){_(l,s,r),_(l,c,r),_(l,F,r),t(F,e),t(e,a),t(e,Z),b.m(ts,e),t(F,q),t(F,y),t(y,h),t(y,z),k.m(as,y),t(y,j),t(y,C),_(l,A,r),_(l,E,r),_(l,H,r),_(l,D,r),t(D,u),t(u,x),t(u,B),$.m(ns,u),t(D,U),t(D,m),t(m,L),t(m,G),I.m(os,m)},p:Fs,d(l){l&&(p(s),p(c),p(F),p(A),p(E),p(H),p(D))}}}function _s(g){let s,v;const c=[g[0],ls];let F={$$slots:{default:[fs]},$$scope:{ctx:g}};for(let e=0;e<c.length;e+=1)F=K(F,c[e]);return s=new us({props:F}),{c(){is(s.$$.fragment)},l(e){ds(s.$$.fragment,e)},m(e,a){vs(s,e,a),v=!0},p(e,[a]){const T=a&1?ms(c,[a&1&&es(e[0]),a&0&&es(ls)]):{};a&2&&(T.$$scope={dirty:a,ctx:e}),s.$set(T)},i(e){v||(ys(s.$$.fragment,e),v=!0)},o(e){Ds(s.$$.fragment,e),v=!1},d(e){Es(s,e)}}}const ls={title:"VITE에서 process.env 사용하기",image:"",alt:"",created:"2024-09-11T00:00:00.000Z",updated:"2024-09-11T00:00:00.000Z",tags:["berry"],images:[],slug:"/Javascript/TIL/vite_env/+page.md",path:"/Javascript/TIL/vite_env",toc:!1};function gs(g,s,v){return g.$$set=c=>{v(0,s=K(K({},s),ss(c)))},s=ss(s),[s]}class Ls extends rs{constructor(s){super(),cs(this,s,gs,_s,ps,{})}}export{Ls as component};
