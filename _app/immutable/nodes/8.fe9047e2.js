import{s as m,h as i,i as y,n as v}from"../chunks/scheduler.dd918b38.js";import{S as u,i as _,r as f,u as A,v as g,d as h,t as x,w as C,g as $,s as I,H as w,e as D,h as j,A as P,c as k,F as H,a as c,f as r}from"../chunks/index.94d1baeb.js";import{P as S,g as T,a as E}from"../chunks/post_layout.0e7f7691.js";function b(p){let s,o="파이선으로 작성한 선택정렬",F,e,a=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">selectionSort</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">arr</span><span style="color: #89DDFF">):</span></div><div class='line'><span style="color: #EEFFFF">      tmp </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">list</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">arr</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF">;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">      </span><span style="color: #89DDFF">for</span><span style="color: #EEFFFF"> i </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">range</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">tmp</span><span style="color: #89DDFF">)):</span></div><div class='line'><span style="color: #EEFFFF">          minIdx </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> i;</span></div><div class='line'><span style="color: #EEFFFF">          </span><span style="color: #89DDFF">for</span><span style="color: #EEFFFF"> j </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">range</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">i</span><span style="color: #89DDFF">+</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">tmp</span><span style="color: #89DDFF">)):</span></div><div class='line'><span style="color: #EEFFFF">              </span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">tmp</span><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">i</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF"> tmp</span><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">j</span><span style="color: #89DDFF">]):</span></div><div class='line'><span style="color: #EEFFFF">                  minIdx </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> i;</span></div><div class='line'><span style="color: #EEFFFF">              </span><span style="color: #89DDFF">else</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">                  minIdx </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> j;</span></div><div class='line'><span style="color: #EEFFFF">          </span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">minIdx </span><span style="color: #89DDFF">!=</span><span style="color: #EEFFFF"> i</span><span style="color: #89DDFF">):</span></div><div class='line'><span style="color: #EEFFFF">              minNum </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> tmp</span><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">minIdx</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF">;</span></div><div class='line'><span style="color: #EEFFFF">              tmp</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">pop</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">minIdx</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF">;</span></div><div class='line'><span style="color: #EEFFFF">              tmp</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">insert</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">i</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> minNum</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF">;</span></div><div class='line'><span style="color: #EEFFFF">      </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> tmp;</span></div></code></div></pre>`,l;return{c(){s=$("p"),s.textContent=o,F=I(),e=new w(!1),l=D(),this.h()},l(n){s=j(n,"P",{"data-svelte-h":!0}),P(s)!=="svelte-1wlifqk"&&(s.textContent=o),F=k(n),e=H(n,!1),l=D(),this.h()},h(){e.a=l},m(n,t){c(n,s,t),c(n,F,t),e.m(a,n,t),c(n,l,t)},p:v,d(n){n&&(r(s),r(F),r(l),e.d())}}}function q(p){let s,o;const F=[p[0],d];let e={$$slots:{default:[b]},$$scope:{ctx:p}};for(let a=0;a<F.length;a+=1)e=i(e,F[a]);return s=new S({props:e}),{c(){f(s.$$.fragment)},l(a){A(s.$$.fragment,a)},m(a,l){g(s,a,l),o=!0},p(a,[l]){const n=l&1?T(F,[l&1&&E(a[0]),l&0&&E(d)]):{};l&2&&(n.$$scope={dirty:l,ctx:a}),s.$set(n)},i(a){o||(h(s.$$.fragment,a),o=!0)},o(a){x(s.$$.fragment,a),o=!1},d(a){C(s,a)}}}const d={title:"선택 정렬",image:"",alt:"",created:"2024-07-08T00:00:00.000Z",updated:"2024-07-08T00:00:00.000Z",tags:["python","정렬"],images:[],slug:"/Javascript/Algorithm/sorting/selection/+page.md",path:"/Javascript/Algorithm/sorting/selection",toc:!1};function B(p,s,o){return p.$$set=F=>{o(0,s=i(i({},s),y(F)))},s=y(s),[s]}class z extends u{constructor(s){super(),_(this,s,B,q,m,{})}}export{z as component};
