import{s as f,h as s,i as d,n as m}from"../chunks/scheduler.dd918b38.js";import{S as _,i as p,r as g,u as v,v as h,d as x,t as T,w as j,g as $,h as y,A as L,a as O,f as b}from"../chunks/index.94d1baeb.js";import{P as B,g as C,a as u}from"../chunks/post_layout.697a27d1.js";function E(c){let e,l="<li><p>CLI</p> <ul><li><code>--forceExit</code> : 테스트 코드 완료 시, 강제로 Jest 종료</li> <li><code>--silent</code> : console.log 출력 X</li> <li><code>--coverage</code> : 테스트 코드 커버리지를 출력</li> <li><code>--verbose</code>: 개별 테스트 결과를 표시</li></ul></li> <li><p>JEST FUNCTION</p> <ul><li><code>test(string, fn)</code> : 단위 테스트 작성</li> <li><code>expect(fn)</code> : 함수를 입력하여 예상되는 값을 출력</li></ul></li> <li><p>GLOBAL JEST FUNCTION</p> <ul><li><code>afterAll(fn, timeout)</code> : 모든 테스트 완료 후 수행, 테스트 완료 후 DB나 MOCK데이터 초기화 위해</li> <li><code>afterEach(fn, timeout)</code> : 각 테스트 완료 후 수행, 변경된 데이터를 초기화 한 후 테스트를 수행하기 위해</li> <li><code>beforeAll(fn, timeout)</code> : 모든 테스트 실행 전 수행, DB나 MOCK데이터 초기화 위해</li> <li><code>beforeEach(fn, timeout)</code> : 각 테스트 실행 전 수행, 동일 설정을 반복적으로 해야하는 경우</li></ul></li> <li><p>METHOD</p> <ul><li><code>mockReturnValue(value)</code> : mock함수 반환값 지정</li> <li><code>toBe(value)</code> : 결과 값(value)이 일치하는지 확인, 객체 비교 시 인스턴스 ID까지 확인(strict)</li> <li><code>toEqual(value)</code> : 결과 값(value)이 일치하는지 확인</li> <li><code>toMatch(regexp | string)</code> : 문자열 검증</li> <li><code>toBeTruthy()</code> <code>toBeFalsy()</code> : 결과 값이 boolean인지 검증</li> <li><code>toBeInstanceOf(class)</code> : class가 동일한 인스턴스인지 검증</li> <li><code>toHaveProperty(keyPath, value?)</code> : 객체의 key, value가 같은지 검증</li> <li><code>toMatchObject(object)</code> : 입력 객체와 출력 객체가 일치하는지 검증, 입력 객체에는 없고 결과 객체에만 있는 속성의 경우 무시</li></ul></li>";return{c(){e=$("ul"),e.innerHTML=l},l(o){e=y(o,"UL",{"data-svelte-h":!0}),L(e)!=="svelte-aoj80s"&&(e.innerHTML=l)},m(o,i){O(o,e,i)},p:m,d(o){o&&b(e)}}}function I(c){let e,l;const o=[c[0],r];let i={$$slots:{default:[E]},$$scope:{ctx:c}};for(let t=0;t<o.length;t+=1)i=s(i,o[t]);return e=new B({props:i}),{c(){g(e.$$.fragment)},l(t){v(e.$$.fragment,t)},m(t,a){h(e,t,a),l=!0},p(t,[a]){const n=a&1?C(o,[a&1&&u(t[0]),a&0&&u(r)]):{};a&2&&(n.$$scope={dirty:a,ctx:t}),e.$set(n)},i(t){l||(x(e.$$.fragment,t),l=!0)},o(t){T(e.$$.fragment,t),l=!1},d(t){j(e,t)}}}const r={title:"Jest 사용법",image:"",alt:"",created:"2024-02-22T00:00:00.000Z",updated:"2024-02-22T00:00:00.000Z",tags:["jest"],images:[],slug:"/Javascript/TIL/jest/jest_execute_option/+page.md",path:"/Javascript/TIL/jest/jest_execute_option",toc:!1};function M(c,e,l){return c.$$set=o=>{l(0,e=s(s({},e),d(o)))},e=d(e),[e]}class A extends _{constructor(e){super(),p(this,e,M,I,f,{})}}export{A as component};
