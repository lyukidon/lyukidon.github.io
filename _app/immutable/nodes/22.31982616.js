import{s as P,h as g,i as y,n as j}from"../chunks/scheduler.dd918b38.js";import{S as F,i as H,r as L,u as b,v as S,d as E,t as I,w as J,g as v,s as h,H as M,h as k,A as T,c as x,F as Z,a as c,f}from"../chunks/index.94d1baeb.js";import{P as q,g as z,a as R}from"../chunks/post_layout.697a27d1.js";function D(_){let e,i="Access Token은 발급 받은 후, 인증을 위해 지속적으로 서버와 교환을 하게 된다. 통신을 자주 반복하게 된다는 것은, 그만큼 탈취될 가능성도 높다는 뜻이다.",n,l,s="Refresh Token은 이러한 Access Token의 단점을 보완해주는 역할을 한다.",a,o,C="토큰을 발급받고 저장하는 순서는 다음과 같다.",p,m,A=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">|        |        |          |</span></div><div class='line'><span style="color: undefined">| Client | Server | Database |</span></div><div class='line'><span style="color: undefined">|        |        |          |</span></div></code></div></pre>`,d,u,$="<li>사용자가 로그인을 한다.</li> <li>서버에서 Access Token과 Refresh Token을 발급한다.<ul><li>클라이언트에 Access Token과 Refresh Token을 전달한다.</li> <li>Refresh Token은 데이터 베이스에 저장한다.</li></ul></li> <li>Access Token의 만료 기간이 지나면, Refresh Token을 이용한다.<ul><li>클라이언트의 Refresh Token과 데이터베이스의 Refresh Token을 비교한다.</li> <li>같다면 2번을 반복한다.</li></ul></li>";return{c(){e=v("p"),e.textContent=i,n=h(),l=v("p"),l.textContent=s,a=h(),o=v("p"),o.textContent=C,p=h(),m=new M(!1),d=h(),u=v("ol"),u.innerHTML=$,this.h()},l(t){e=k(t,"P",{"data-svelte-h":!0}),T(e)!=="svelte-kxmjao"&&(e.textContent=i),n=x(t),l=k(t,"P",{"data-svelte-h":!0}),T(l)!=="svelte-160z862"&&(l.textContent=s),a=x(t),o=k(t,"P",{"data-svelte-h":!0}),T(o)!=="svelte-1iifmc2"&&(o.textContent=C),p=x(t),m=Z(t,!1),d=x(t),u=k(t,"OL",{"data-svelte-h":!0}),T(u)!=="svelte-m068na"&&(u.innerHTML=$),this.h()},h(){m.a=d},m(t,r){c(t,e,r),c(t,n,r),c(t,l,r),c(t,a,r),c(t,o,r),c(t,p,r),m.m(A,t,r),c(t,d,r),c(t,u,r)},p:j,d(t){t&&(f(e),f(n),f(l),f(a),f(o),f(p),m.d(),f(d),f(u))}}}function O(_){let e,i;const n=[_[0],w];let l={$$slots:{default:[D]},$$scope:{ctx:_}};for(let s=0;s<n.length;s+=1)l=g(l,n[s]);return e=new q({props:l}),{c(){L(e.$$.fragment)},l(s){b(e.$$.fragment,s)},m(s,a){S(e,s,a),i=!0},p(s,[a]){const o=a&1?z(n,[a&1&&R(s[0]),a&0&&R(w)]):{};a&2&&(o.$$scope={dirty:a,ctx:s}),e.$set(o)},i(s){i||(E(e.$$.fragment,s),i=!0)},o(s){I(e.$$.fragment,s),i=!1},d(s){J(e,s)}}}const w={title:"Refresh Token 사용 방법",image:"",alt:"Urara",created:"2024-02-02T00:00:00.000Z",updated:"2024-02-02T00:00:00.000Z",tags:["jwt","token","refresh token"],images:[],slug:"/Javascript/TIL/jwt/refresh_token/+page.md",path:"/Javascript/TIL/jwt/refresh_token",toc:!1};function U(_,e,i){return _.$$set=n=>{i(0,e=g(g({},e),y(n)))},e=y(e),[e]}class N extends F{constructor(e){super(),H(this,e,U,O,P,{})}}export{N as component};
