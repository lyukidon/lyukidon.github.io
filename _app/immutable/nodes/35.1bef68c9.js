import{s as _,h as i,i as u,n as d}from"../chunks/scheduler.dd918b38.js";import{S as p,i as f,r as g,u as x,v,d as C,t as h,w as P,g as $,h as A,A as I,a as S,f as T}from"../chunks/index.94d1baeb.js";import{P as L,g as w,a as m}from"../chunks/post_layout.697a27d1.js";function y(o){let e,a='<li>참고 (코드) : <a href="https://velog.io/@hoonnn/React-Context-API%EC%99%80-useContext" rel="nofollow noopener noreferrer external" target="_blank">https://velog.io/@hoonnn/React-Context-API와-useContext</a></li> <li>Context API : 전역으로 데이터 관리해주는 API</li> <li>Provider &amp; Consumer<ul><li>Provider<ul><li>Context를 생성하고, 하위 컴포넌트에 제공하는 컴포넌트</li> <li>전역으로 관리할 상태를 value property로 설정하면, 하위 컴포넌트가 사용할 수 있음</li></ul></li> <li>Consumer<ul><li>Provider에서 제공하는 상태를 사용하는 컴포넌트</li> <li>Provider의 상태를 구독하고, 상태가 변경될 때마다 재랜더링</li></ul></li></ul></li> <li>Consumer ⇒ useContext Hook으로 대체하게 되면서 useState처럼 상태관리를 할 수 있게 됌</li> <li>useState VS useContext<ul><li>useState<ul><li>컴포넌트 내부의 상태관리</li> <li>예) form, loading, toggle 상태</li></ul></li> <li>useContext<ul><li>전역 상태 관리. 여러 컴포넌트 간에 같은 상태를 공유하는 경우 사용</li> <li>예) 로그인 상태, theme 상태, App 전체 알림</li></ul></li></ul></li>';return{c(){e=$("ul"),e.innerHTML=a},l(l){e=A(l,"UL",{"data-svelte-h":!0}),I(e)!=="svelte-2mdjw2"&&(e.innerHTML=a)},m(l,s){S(l,e,s)},p:d,d(l){l&&T(e)}}}function H(o){let e,a;const l=[o[0],c];let s={$$slots:{default:[y]},$$scope:{ctx:o}};for(let t=0;t<l.length;t+=1)s=i(s,l[t]);return e=new L({props:s}),{c(){g(e.$$.fragment)},l(t){x(e.$$.fragment,t)},m(t,n){v(e,t,n),a=!0},p(t,[n]){const r=n&1?w(l,[n&1&&m(t[0]),n&0&&m(c)]):{};n&2&&(r.$$scope={dirty:n,ctx:t}),e.$set(r)},i(t){a||(C(e.$$.fragment,t),a=!0)},o(t){h(e.$$.fragment,t),a=!1},d(t){P(e,t)}}}const c={title:"useContext",image:"",alt:"",created:"2024-04-15T00:00:00.000Z",updated:"2024-04-15T00:00:00.000Z",tags:["react"],images:[],slug:"/Javascript/TIL/react/useContext/+page.md",path:"/Javascript/TIL/react/useContext",toc:!1};function b(o,e,a){return o.$$set=l=>{a(0,e=i(i({},e),u(l)))},e=u(e),[e]}class M extends p{constructor(e){super(),f(this,e,b,H,_,{})}}export{M as component};
