import{s as m,h as n,i as u,n as d}from"../chunks/scheduler.dd918b38.js";import{S as f,i as p,r as T,u as g,v,d as E,t as O,w as P,g as h,h as C,A as $,a as b,f as x}from"../chunks/index.94d1baeb.js";import{P as y,g as L,a as c}from"../chunks/post_layout.0e7f7691.js";function S(s){let e,a="<li>HTTP 메서드에 대해 설명해주세요 PROTOCOL  찾아보기<ul><li>종류: GET, POST, PUT, PATCH, DELETE, HEAD, CONNECT, OPTIONS, TRACE<ul><li>HEAD: get 메서드와 동일하지만, body값을 제외하고 조회</li> <li>CONNECT: 목적 리소스로 식별되는 서버로의 터널을 맺습니다.</li> <li>options: 목적 리소스의 통신을 설정하는 데 쓰입니다.</li> <li>Trace: 목적 리소스의 경로를 따라 메시지 loop-back 테스트를 합니다.</li></ul></li> <li>의미: 클라이언트가 웹 서버에 어떤 동작을 원하는지 나타내는 방법 or 서버가 수행해야할 동작을 지정하는 방법</li></ul></li> <li>GET, POST의 개념과 함께 데이터 흐름에 대해서 설명해주세요<ul><li>GET<ul><li>서버에 정보를 조회할 때</li> <li>데이터 흐름<ol><li>경로 or 쿼리스트링을 이용해 데이터 요청</li> <li>요청을 받으면 데이터베이스에서 정보 조회 후 클라이언트 전달</li> </ol><ul><li>2014년부터 GET메서드도 body를 보낼 수 있게 되었으나, 특정 클라이언트에서는 지원하지 않을 수도 있음.</li></ul></li></ul></li> <li>POST<ul><li>서버에 리소스를 추가할 때</li> <li>데이터 흐름<ol><li>클라이언트는 body에 데이터를 JSON형태로 전달</li> <li>database에 body 데이터를 추가</li> <li>생성된 리소스를 클라이언트로 전달</li></ol></li></ul></li></ul></li>";return{c(){e=h("ol"),e.innerHTML=a},l(l){e=C(l,"OL",{"data-svelte-h":!0}),$(e)!=="svelte-19hgn5v"&&(e.innerHTML=a)},m(l,o){b(l,e,o)},p:d,d(l){l&&x(e)}}}function H(s){let e,a;const l=[s[0],_];let o={$$slots:{default:[S]},$$scope:{ctx:s}};for(let t=0;t<l.length;t+=1)o=n(o,l[t]);return e=new y({props:o}),{c(){T(e.$$.fragment)},l(t){g(e.$$.fragment,t)},m(t,i){v(e,t,i),a=!0},p(t,[i]){const r=i&1?L(l,[i&1&&c(t[0]),i&0&&c(_)]):{};i&2&&(r.$$scope={dirty:i,ctx:t}),e.$set(r)},i(t){a||(E(e.$$.fragment,t),a=!0)},o(t){O(e.$$.fragment,t),a=!1},d(t){P(e,t)}}}const _={title:"백엔드 기초",image:"",alt:"",created:"2024-03-29T00:00:00.000Z",updated:"2024-03-29T00:00:00.000Z",tags:["backend"],images:[],slug:"/Javascript/TIL/백엔드기초/+page.md",path:"/Javascript/TIL/백엔드기초",toc:!1};function N(s,e,a){return s.$$set=l=>{a(0,e=n(n({},e),u(l)))},e=u(e),[e]}class I extends f{constructor(e){super(),p(this,e,N,H,m,{})}}export{I as component};
