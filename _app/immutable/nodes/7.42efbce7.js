import{s as P,h as v,i as f,n as H}from"../chunks/scheduler.dd918b38.js";import{S as M,i as T,r as J,u as L,v as S,d as Z,t as q,w as I,g as E,m as U,H as g,s as h,e as A,h as m,j as x,n as z,F as C,f as c,c as b,A as B,a as d,y as $}from"../chunks/index.94d1baeb.js";import{P as G,g as K,a as j}from"../chunks/post_layout.0e7f7691.js";function N(r){let s,n,t,F,a=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">c </span><span style="color: #89DDFF">%</span><span style="color: #EEFFFF"> m </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> (a </span><span style="color: #89DDFF">*</span><span style="color: #EEFFFF"> b) </span><span style="color: #89DDFF">%</span><span style="color: #EEFFFF"> m</span></div><div class='line'><span style="color: #EEFFFF">c </span><span style="color: #89DDFF">%</span><span style="color: #EEFFFF"> m </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> [(a </span><span style="color: #89DDFF">%</span><span style="color: #EEFFFF"> m)(b </span><span style="color: #89DDFF">%</span><span style="color: #EEFFFF"> m)] </span><span style="color: #89DDFF">%</span><span style="color: #EEFFFF"> m</span></div></code></div></pre>`,o,e,_="위의 합동식을 이용해서, 큰 수의 나머지를 구하는 알고리즘",D,i,k=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #546E7A">/**</span></div><div class='line'><span style="color: #546E7A"> * base: 밑</span></div><div class='line'><span style="color: #546E7A"> * exponent: 지수</span></div><div class='line'><span style="color: #546E7A"> * modulus: 나누는 수</span></div><div class='line'><span style="color: #546E7A"> */</span></div><div class='line'><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">modular</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">base</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> exponent</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> modulus</span><span style="color: #89DDFF">)&#123;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">if</span><span style="color: #F07178"> (</span><span style="color: #EEFFFF">modulus</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #F78C6C">1</span><span style="color: #F07178">) </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">value</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">for</span><span style="color: #F07178"> (</span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">i</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">i</span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">exponent</span><span style="color: #89DDFF">;</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">i</span><span style="color: #89DDFF">++</span><span style="color: #F07178">)</span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">value</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> (</span><span style="color: #EEFFFF">value</span><span style="color: #F07178"> </span><span style="color: #89DDFF">*</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">base</span><span style="color: #F07178">) </span><span style="color: #89DDFF">%</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">modulus</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">value</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,y;return{c(){s=E("ul"),n=E("li"),t=U("합동식 (모듈러 산술, Modular Arthmetic)"),F=new g(!1),o=h(),e=E("p"),e.textContent=_,D=h(),i=new g(!1),y=A(),this.h()},l(l){s=m(l,"UL",{});var p=x(s);n=m(p,"LI",{});var u=x(n);t=z(u,"합동식 (모듈러 산술, Modular Arthmetic)"),F=C(u,!1),u.forEach(c),p.forEach(c),o=b(l),e=m(l,"P",{"data-svelte-h":!0}),B(e)!=="svelte-t2xrk6"&&(e.textContent=_),D=b(l),i=C(l,!1),y=A(),this.h()},h(){F.a=null,i.a=y},m(l,p){d(l,s,p),$(s,n),$(n,t),F.m(a,n),d(l,o,p),d(l,e,p),d(l,D,p),i.m(k,l,p),d(l,y,p)},p:H,d(l){l&&(c(s),c(o),c(e),c(D),c(y),i.d())}}}function O(r){let s,n;const t=[r[0],w];let F={$$slots:{default:[N]},$$scope:{ctx:r}};for(let a=0;a<t.length;a+=1)F=v(F,t[a]);return s=new G({props:F}),{c(){J(s.$$.fragment)},l(a){L(s.$$.fragment,a)},m(a,o){S(s,a,o),n=!0},p(a,[o]){const e=o&1?K(t,[o&1&&j(a[0]),o&0&&j(w)]):{};o&2&&(e.$$scope={dirty:o,ctx:a}),s.$set(e)},i(a){n||(Z(s.$$.fragment,a),n=!0)},o(a){q(s.$$.fragment,a),n=!1},d(a){I(s,a)}}}const w={title:"큰 수의 나머지 찾기(Modular Arithmetic, 모듈러 산술, 합동식)",image:"",alt:"",created:"2024-05-15T00:00:00.000Z",updated:"2024-05-15T00:00:00.000Z",tags:["algorithm"],images:[],slug:"/Javascript/Algorithm/number/큰_수의_나머지/+page.md",path:"/Javascript/Algorithm/number/큰_수의_나머지",toc:!1};function Q(r,s,n){return r.$$set=t=>{n(0,s=v(v({},s),f(t)))},s=f(s),[s]}class X extends M{constructor(s){super(),T(this,s,Q,O,P,{})}}export{X as component};
