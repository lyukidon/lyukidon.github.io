import{s as us,h as ls,i as Fs,n as _s}from"../chunks/scheduler.dd918b38.js";import{S as fs,i as ms,r as gs,u as hs,v as Cs,d as xs,t as ks,w as ws,g as t,s as F,H as j,h as n,A as g,c as p,j as E,F as P,f as c,a as es,y as l}from"../chunks/index.94d1baeb.js";import{P as bs,g as As,a as ps}from"../chunks/post_layout.2e559c88.js";function js(h){let s,d="docker에 redis를 설치하는 방법",i,a,e,o,L="redis 이미지 받아오기",K,I,is=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">docker pull redis</span></div></code></div></pre>`,M,D,C,as="docker에 설치",N,$,ds=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">docker run --name redisContainer -d -p 6379:6379 redis</span></div></code></div></pre>`,Q,v,x,ts="redis와 express 연결하기",U,T,vs=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">npm i redis</span></div></code></div></pre>`,R,z,ys=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #546E7A">// redisClient.js</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> Redis </span><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">redis</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">const</span><span style="color: #EEFFFF"> redisClient </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">await</span><span style="color: #EEFFFF"> Redis</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createClient</span><span style="color: #EEFFFF">(process</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">env</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">PORT_REDIS)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">on</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">error</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> err </span><span style="color: #C792EA">=&gt;</span><span style="color: #EEFFFF"> console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Redis Client Error</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> err))</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connect</span><span style="color: #EEFFFF">()</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">export</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">default</span><span style="color: #EEFFFF"> redisClient</span><span style="color: #89DDFF">;</span></div></code></div></pre>`,V,u,k,ns="redis 데이터 읽기, 쓰기",W,_,f,w,os="읽기",X,H,Es=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> redisClient </span><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">redisClient.js</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">await</span><span style="color: #EEFFFF"> redisClient</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #EEFFFF">(key)</span><span style="color: #89DDFF">;</span></div></code></div></pre>`,Y,m,b,rs="쓰기 및 업데이트",ss,O,Ds=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> redisClient </span><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">redisClient.js</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">await</span><span style="color: #EEFFFF"> redisClient</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">set</span><span style="color: #EEFFFF">(key</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> value)</span><span style="color: #89DDFF">;</span></div></code></div></pre>`;return{c(){s=t("p"),s.textContent=d,i=F(),a=t("ol"),e=t("li"),o=t("p"),o.textContent=L,K=F(),I=new j(!1),M=F(),D=t("li"),C=t("p"),C.textContent=as,N=F(),$=new j(!1),Q=F(),v=t("li"),x=t("p"),x.textContent=ts,U=F(),T=new j(!1),R=F(),z=new j(!1),V=F(),u=t("li"),k=t("p"),k.textContent=ns,W=F(),_=t("ol"),f=t("li"),w=t("p"),w.textContent=os,X=F(),H=new j(!1),Y=F(),m=t("li"),b=t("p"),b.textContent=rs,ss=F(),O=new j(!1),this.h()},l(y){s=n(y,"P",{"data-svelte-h":!0}),g(s)!=="svelte-tjnbp1"&&(s.textContent=d),i=p(y),a=n(y,"OL",{});var r=E(a);e=n(r,"LI",{});var S=E(e);o=n(S,"P",{"data-svelte-h":!0}),g(o)!=="svelte-etlrfi"&&(o.textContent=L),K=p(S),I=P(S,!1),S.forEach(c),M=p(r),D=n(r,"LI",{});var J=E(D);C=n(J,"P",{"data-svelte-h":!0}),g(C)!=="svelte-cz7wcs"&&(C.textContent=as),N=p(J),$=P(J,!1),J.forEach(c),Q=p(r),v=n(r,"LI",{});var A=E(v);x=n(A,"P",{"data-svelte-h":!0}),g(x)!=="svelte-17ka62f"&&(x.textContent=ts),U=p(A),T=P(A,!1),R=p(A),z=P(A,!1),A.forEach(c),V=p(r),u=n(r,"LI",{});var Z=E(u);k=n(Z,"P",{"data-svelte-h":!0}),g(k)!=="svelte-1vxbpig"&&(k.textContent=ns),W=p(Z),_=n(Z,"OL",{});var q=E(_);f=n(q,"LI",{});var B=E(f);w=n(B,"P",{"data-svelte-h":!0}),g(w)!=="svelte-1obkz8b"&&(w.textContent=os),X=p(B),H=P(B,!1),B.forEach(c),Y=p(q),m=n(q,"LI",{});var G=E(m);b=n(G,"P",{"data-svelte-h":!0}),g(b)!=="svelte-1yzjzni"&&(b.textContent=rs),ss=p(G),O=P(G,!1),G.forEach(c),q.forEach(c),Z.forEach(c),r.forEach(c),this.h()},h(){I.a=null,$.a=null,T.a=R,z.a=null,H.a=null,O.a=null},m(y,r){es(y,s,r),es(y,i,r),es(y,a,r),l(a,e),l(e,o),l(e,K),I.m(is,e),l(a,M),l(a,D),l(D,C),l(D,N),$.m(ds,D),l(a,Q),l(a,v),l(v,x),l(v,U),T.m(vs,v),l(v,R),z.m(ys,v),l(a,V),l(a,u),l(u,k),l(u,W),l(u,_),l(_,f),l(f,w),l(f,X),H.m(Es,f),l(_,Y),l(_,m),l(m,b),l(m,ss),O.m(Ds,m)},p:_s,d(y){y&&(c(s),c(i),c(a))}}}function Ps(h){let s,d;const i=[h[0],cs];let a={$$slots:{default:[js]},$$scope:{ctx:h}};for(let e=0;e<i.length;e+=1)a=ls(a,i[e]);return s=new bs({props:a}),{c(){gs(s.$$.fragment)},l(e){hs(s.$$.fragment,e)},m(e,o){Cs(s,e,o),d=!0},p(e,[o]){const L=o&1?As(i,[o&1&&ps(e[0]),o&0&&ps(cs)]):{};o&2&&(L.$$scope={dirty:o,ctx:e}),s.$set(L)},i(e){d||(xs(s.$$.fragment,e),d=!0)},o(e){ks(s.$$.fragment,e),d=!1},d(e){ws(s,e)}}}const cs={title:"redis 설치 및 연결",image:"",alt:"",created:"2024-02-05T00:00:00.000Z",updated:"2024-02-05T00:00:00.000Z",tags:["docker","redis","express"],images:[],slug:"/Javascript/TIL/redis/start/+page.md",path:"/Javascript/TIL/redis/start",toc:!1};function Ls(h,s,d){return h.$$set=i=>{d(0,s=ls(ls({},s),Fs(i)))},s=Fs(s),[s]}class Rs extends fs{constructor(s){super(),ms(this,s,Ls,Ps,us,{})}}export{Rs as component};
