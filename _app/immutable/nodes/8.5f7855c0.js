import{s as u,h as c,i,n as _}from"../chunks/scheduler.dd918b38.js";import{S as p,i as f,r as g,u as v,v as x,d as h,t as $,w as k,g as C,h as T,A as D,a as L,f as w}from"../chunks/index.94d1baeb.js";import{P as y,g as P,a as d}from"../chunks/post_layout.0e7f7691.js";function H(n){let e,a="<li><code>up</code> : Docker Compose에 정의되어 있는 모든 서비스 <strong>컨테이너를 한 번에 생성하고 실행</strong></li> <li><code>down</code> : Docker Compose에 정의되어 있는 모든 서비스 <strong>컨테이너를 한 번에 정지시키고 삭제</strong></li> <li><code>start</code> : 정지되어 있는 특정 서비스 컨테이너를 작동시키기 위해 사용</li> <li><code>stop</code> : 작동 중인 특정 서비스 컨테이너를 정지</li> <li><code>ps</code> : Docker Compose에 정의되어 있는 모든 서비스 컨테이너 목록을 조회</li> <li><code>logs</code> : 서비스 컨테이너의 로그를 확인하고 싶을 때 사용하며, 보통 <code>-f</code> 옵션을 붙여서 실시간 로그를 확인</li> <li><code>exec</code> : 실행 중인 서비스 컨테이너를 대상으로 어떤 명령어를 날릴 때 사용</li> <li><code>run</code> : 서비스 컨테이너의 특정 명령어를 일회성으로 실행할 때 사용</li> <li><code>config</code> : Docker Compose 설정을 확인할 때 사용</li>";return{c(){e=C("ul"),e.innerHTML=a},l(o){e=T(o,"UL",{"data-svelte-h":!0}),D(e)!=="svelte-rzwx3x"&&(e.innerHTML=a)},m(o,l){L(o,e,l)},p:_,d(o){o&&w(e)}}}function I(n){let e,a;const o=[n[0],m];let l={$$slots:{default:[H]},$$scope:{ctx:n}};for(let t=0;t<o.length;t+=1)l=c(l,o[t]);return e=new y({props:l}),{c(){g(e.$$.fragment)},l(t){v(e.$$.fragment,t)},m(t,s){x(e,t,s),a=!0},p(t,[s]){const r=s&1?P(o,[s&1&&d(t[0]),s&0&&d(m)]):{};s&2&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){a||(h(e.$$.fragment,t),a=!0)},o(t){$(e.$$.fragment,t),a=!1},d(t){k(e,t)}}}const m={title:"Docker Compose Cli",image:"",alt:"",created:"2024-04-05T00:00:00.000Z",updated:"2024-04-05T00:00:00.000Z",tags:["docker"],images:[],slug:"/Javascript/TIL/docker/cli/+page.md",path:"/Javascript/TIL/docker/cli",toc:!1};function J(n,e,a){return n.$$set=o=>{a(0,e=c(c({},e),i(o)))},e=i(e),[e]}class b extends p{constructor(e){super(),f(this,e,J,I,u,{})}}export{b as component};
