import{s as ee,h as Q,i as J,n as se}from"../chunks/scheduler.4680106d.js";import{S as ne,i as le,r as ae,u as ie,v as de,d as te,t as oe,w as ce,g as o,s as m,H as N,e as Z,h as c,j as b,A as x,c as _,F as z,f as i,k as pe,a as h,y as d}from"../chunks/index.4ac987bf.js";import{P as re,g as ve,a as B}from"../chunks/post_layout.31e93455.js";function ue(g){let e,a,t,k="Docker 설치",s,l,r,R='<p>Docker Desktop</p> <p><a href="https://www.docker.com/" rel="nofollow noopener noreferrer external" target="_blank">https://www.docker.com/</a></p>',P,u,F,Y="Docker Engine (Ubuntu) 설치",H,L,f,E,j="Add docker repo",I,w,K=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #546E7A"># Add Docker's official GPG key:</span></div><div class='line'><span style="color: #EEFFFF">sudo apt-get update</span></div><div class='line'><span style="color: #EEFFFF">sudo apt-get install ca-certificates curl gnupg</span></div><div class='line'><span style="color: #EEFFFF">sudo install -m 0755 -d /etc/apt/keyrings</span></div><div class='line'><span style="color: #EEFFFF">curl -fsSL https://download.docker.com/linux/ubuntu/gpg </span><span style="color: #89DDFF">|</span><span style="color: #EEFFFF"> sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span></div><div class='line'><span style="color: #EEFFFF">sudo chmod a+r /etc/apt/keyrings/docker.gpg</span></div></code></div></pre>`,A,v,U='<a href="#add-the-repository-to-apt-sources">Add the repository to Apt sources:</a>',D,y,W=`echo \\
“deb [arch=$(dpkg –print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] <a href="https://download.docker.com/linux/ubuntu" rel="nofollow noopener noreferrer external" target="_blank">https://download.docker.com/linux/ubuntu</a> \\
$(. /etc/os-release &amp;&amp; echo “$VERSION_CODENAME”) stable” | \\
sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null
sudo apt-get update`,M,C,X=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">2. Install Docker</span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;bash</span></div><div class='line'><span style="color: undefined">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">2. mysql 이미지 다운로드</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;bash</span></div><div class='line'><span style="color: undefined">docker pull mysql</span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">3. 다운로드 받은 이미지 확인</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;bash</span></div><div class='line'><span style="color: undefined">docker images</span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">4. container 생성 및 구동</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;bash</span></div><div class='line'><span style="color: undefined">docker run --name mysqlContainer -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=비밀번호 mysql:latest</span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">- run : 컨테이너를 생성하고 구동시키는 명령어</span></div><div class='line'><span style="color: undefined">- --name : 컨테이너의 이름</span></div><div class='line'><span style="color: undefined">- -d : 백그라운드에서 실행</span></div><div class='line'><span style="color: undefined">- -p : &#96;내부포트:외부포트&#96; 연결 설정</span></div><div class='line'><span style="color: undefined">- -e : 환경변수 설정</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">MYSQL은 &#96;MYSQL_ROOT_PASSWORD&#96;, &#96;MYSQL_DATABASE&#96;, &#96;MYSQL_USER&#96;, &#96;MYSQL_PASSWORD&#96; 가 있다.</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">- mysql:latest : 구동하고자 하는 컨테이너(mysql)을 적는다.</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">5. 구동 중(run)인 컨테이너 확인</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;bash</span></div><div class='line'><span style="color: undefined">docker ps</span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">- -a : 전체 컨테이너를 확인하고자 하는 경우</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">6. 컨테이너 접속</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;bash</span></div><div class='line'><span style="color: undefined">docker exec -it mysqlContainer /bin/bash</span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">- -i : 사용자가 접근하지 않아도, 계속 입력을 받을 수 있는 상태를 유지</span></div><div class='line'><span style="color: undefined">- -t : 터미널을 사용할 수 있도록 할당해놓음</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">7. 컨테이너 종료</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;bash</span></div><div class='line'><span style="color: undefined">docker stop mysqlContainer</span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">8. 기존 컨테이너 시작</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;bash</span></div><div class='line'><span style="color: undefined">docker start mysqlContainer</span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">9. 기존 컨테이너 재시작</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;bash</span></div><div class='line'><span style="color: undefined">docker restart mysqlContainer</span></div><div class='line'><span style="color: undefined">&#96;&#96;&#96;</span></div><div class='line'><span style="color: undefined"></span></div></code></div></pre>`,S;return{c(){e=o("ol"),a=o("li"),t=o("p"),t.textContent=k,s=m(),l=o("ul"),r=o("li"),r.innerHTML=R,P=m(),u=o("li"),F=o("p"),F.textContent=Y,H=m(),L=o("ol"),f=o("li"),E=o("p"),E.textContent=j,I=m(),w=new N(!1),A=m(),v=o("h1"),v.innerHTML=U,D=m(),y=o("p"),y.innerHTML=W,M=m(),C=new N(!1),S=Z(),this.h()},l(n){e=c(n,"OL",{});var p=b(e);a=c(p,"LI",{});var T=b(a);t=c(T,"P",{"data-svelte-h":!0}),x(t)!=="svelte-25mlwg"&&(t.textContent=k),s=_(T),l=c(T,"UL",{});var q=b(l);r=c(q,"LI",{"data-svelte-h":!0}),x(r)!=="svelte-4g3t0l"&&(r.innerHTML=R),P=_(q),u=c(q,"LI",{});var $=b(u);F=c($,"P",{"data-svelte-h":!0}),x(F)!=="svelte-1hf8ffo"&&(F.textContent=Y),H=_($),L=c($,"OL",{});var G=b(L);f=c(G,"LI",{});var O=b(f);E=c(O,"P",{"data-svelte-h":!0}),x(E)!=="svelte-1msjo4z"&&(E.textContent=j),I=_(O),w=z(O,!1),O.forEach(i),G.forEach(i),$.forEach(i),q.forEach(i),T.forEach(i),p.forEach(i),A=_(n),v=c(n,"H1",{id:!0,"data-svelte-h":!0}),x(v)!=="svelte-94mgpm"&&(v.innerHTML=U),D=_(n),y=c(n,"P",{"data-svelte-h":!0}),x(y)!=="svelte-1ks2k67"&&(y.innerHTML=W),M=_(n),C=z(n,!1),S=Z(),this.h()},h(){w.a=null,pe(v,"id","add-the-repository-to-apt-sources"),C.a=S},m(n,p){h(n,e,p),d(e,a),d(a,t),d(a,s),d(a,l),d(l,r),d(l,P),d(l,u),d(u,F),d(u,H),d(u,L),d(L,f),d(f,E),d(f,I),w.m(K,f),h(n,A,p),h(n,v,p),h(n,D,p),h(n,y,p),h(n,M,p),C.m(X,n,p),h(n,S,p)},p:se,d(n){n&&(i(e),i(A),i(v),i(D),i(y),i(M),i(S),C.d())}}}function fe(g){let e,a;const t=[g[0],V];let k={$$slots:{default:[ue]},$$scope:{ctx:g}};for(let s=0;s<t.length;s+=1)k=Q(k,t[s]);return e=new re({props:k}),{c(){ae(e.$$.fragment)},l(s){ie(e.$$.fragment,s)},m(s,l){de(e,s,l),a=!0},p(s,[l]){const r=l&1?ve(t,[l&1&&B(s[0]),l&0&&B(V)]):{};l&2&&(r.$$scope={dirty:l,ctx:s}),e.$set(r)},i(s){a||(te(e.$$.fragment,s),a=!0)},o(s){oe(e.$$.fragment,s),a=!1},d(s){ce(e,s)}}}const V={title:"Docker MySQL Container 설치와 사용방법",image:"",alt:"",created:"2024-01-24T00:00:00.000Z",updated:"2024-01-24T00:00:00.000Z",tags:["docker","mysql"],images:[],slug:"/Javascript/TIL/docker_start/+page.md",path:"/Javascript/TIL/docker_start",toc:[{depth:1,title:"Add the repository to Apt sources:",slug:"add-the-repository-to-apt-sources"}]};function ye(g,e,a){return g.$$set=t=>{a(0,e=Q(Q({},e),J(t)))},e=J(e),[e]}class ge extends ne{constructor(e){super(),le(this,e,ye,fe,ee,{})}}export{ge as component};
