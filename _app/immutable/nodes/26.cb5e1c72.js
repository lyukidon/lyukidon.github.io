import{s as cs,h as G,i as X,n as rs}from"../chunks/scheduler.dd918b38.js";import{S as ys,i as is,r as Es,u as Ds,v as ds,d as vs,t as us,w as _s,g as E,s as o,H as g,e as Y,h as D,A as d,c as t,F as T,k as ss,a as n,f as e}from"../chunks/index.94d1baeb.js";import{P as fs,g as ms,a as ls}from"../chunks/post_layout.3594328b.js";function Cs(B){let a,i='<a href="#제네릭">제네릭</a>',y,c,F="<li>사용성이 높은 컴포넌트를 만들 때 사용됨</li> <li>여러 타입을 넣어서 사용하는 컴포넌트에 적합</li>",p,r,U='<a href="#예시">예시</a>',z,v,K="<strong>일반 TS로 작성한 함수</strong>",S,A,ns=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" ts="true"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">hello</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">data</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">):</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">string</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">data</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,h,u,N="<strong>제네릭을 사용해 작성된 함수</strong>",q,k,es=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" ts="true"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">hello</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Type</span><span style="color: #89DDFF">&gt;(</span><span style="color: #EEFFFF">data</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Type</span><span style="color: #89DDFF">):</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Type</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">data</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #C792EA">const</span><span style="color: #EEFFFF"> newFunc </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">hello</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">hello world</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #82AAFF">newFunc</span><span style="color: #EEFFFF">()</span><span style="color: #89DDFF">;</span><span style="color: #EEFFFF"> </span><span style="color: #546E7A">// "hello world"</span></div></code></div></pre>`,w,_,Q="<strong>여러 타입을 작성하는 경우</strong>",I,H,Fs=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" ts="true"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">hello</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">T</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">P</span><span style="color: #89DDFF">&gt;(</span><span style="color: #EEFFFF">key</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">T</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> value</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">P</span><span style="color: #89DDFF">):</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Map</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">T</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">P</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">data</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">Map</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">T</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">P</span><span style="color: #89DDFF">&gt;</span><span style="color: #F07178">([[</span><span style="color: #EEFFFF">key</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">value</span><span style="color: #F07178">]])</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">data</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,L,f,R="<strong>제네릭 제약 조건</strong>",J,x,os=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" ts="true"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">hello</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Type</span><span style="color: #89DDFF">&gt;(</span><span style="color: #EEFFFF">data</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Type</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">data</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">name</span><span style="color: #89DDFF">;</span><span style="color: #F07178"> </span><span style="color: #546E7A">//에러 발생</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,M,m,V="data의 Type이 지정되지 않은 경우이기 때문에 오류가 발생한다. 이 경우에는",O,P,ts=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" ts="true"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">interface</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Person</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">hello</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Type</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">extends</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Person</span><span style="color: #89DDFF">&gt;(</span><span style="color: #EEFFFF">data</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Type</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">data</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">name</span><span style="color: #89DDFF">;</span><span style="color: #F07178"> </span><span style="color: #546E7A">//에러 발생</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,b,C,W=`<strong><code>keyof</code> 키워드</strong>
특정 객체의 key를 받아와, 그 객체의 key 값이 아닌 경우 에러를 발생시킵니다.`,Z,$,ps=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" ts="true"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">type</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Obj</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #EEFFFF"> </span><span style="color: #F07178">a</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">;</span><span style="color: #EEFFFF"> </span><span style="color: #F07178">b</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">;</span><span style="color: #EEFFFF"> </span><span style="color: #F07178">c</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">3</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#125;;</span></div><div class='line'><span style="color: #C792EA">type</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">T</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">keyof</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Obj</span><span style="color: #89DDFF">;</span><span style="color: #EEFFFF"> </span><span style="color: #546E7A">// "a" | "b" | "c"</span></div></code></div></pre>`,j;return{c(){a=E("h2"),a.innerHTML=i,y=o(),c=E("ul"),c.innerHTML=F,p=o(),r=E("h2"),r.innerHTML=U,z=o(),v=E("p"),v.innerHTML=K,S=o(),A=new g(!1),h=o(),u=E("p"),u.innerHTML=N,q=o(),k=new g(!1),w=o(),_=E("p"),_.innerHTML=Q,I=o(),H=new g(!1),L=o(),f=E("p"),f.innerHTML=R,J=o(),x=new g(!1),M=o(),m=E("p"),m.textContent=V,O=o(),P=new g(!1),b=o(),C=E("p"),C.innerHTML=W,Z=o(),$=new g(!1),j=Y(),this.h()},l(s){a=D(s,"H2",{id:!0,"data-svelte-h":!0}),d(a)!=="svelte-1rp21qz"&&(a.innerHTML=i),y=t(s),c=D(s,"UL",{"data-svelte-h":!0}),d(c)!=="svelte-4sl92y"&&(c.innerHTML=F),p=t(s),r=D(s,"H2",{id:!0,"data-svelte-h":!0}),d(r)!=="svelte-5vkn6w"&&(r.innerHTML=U),z=t(s),v=D(s,"P",{"data-svelte-h":!0}),d(v)!=="svelte-n0jrd2"&&(v.innerHTML=K),S=t(s),A=T(s,!1),h=t(s),u=D(s,"P",{"data-svelte-h":!0}),d(u)!=="svelte-k6o9ev"&&(u.innerHTML=N),q=t(s),k=T(s,!1),w=t(s),_=D(s,"P",{"data-svelte-h":!0}),d(_)!=="svelte-bejh8z"&&(_.innerHTML=Q),I=t(s),H=T(s,!1),L=t(s),f=D(s,"P",{"data-svelte-h":!0}),d(f)!=="svelte-1g3jyvz"&&(f.innerHTML=R),J=t(s),x=T(s,!1),M=t(s),m=D(s,"P",{"data-svelte-h":!0}),d(m)!=="svelte-v88wnk"&&(m.textContent=V),O=t(s),P=T(s,!1),b=t(s),C=D(s,"P",{"data-svelte-h":!0}),d(C)!=="svelte-g08pzi"&&(C.innerHTML=W),Z=t(s),$=T(s,!1),j=Y(),this.h()},h(){ss(a,"id","제네릭"),ss(r,"id","예시"),A.a=h,k.a=w,H.a=L,x.a=M,P.a=b,$.a=j},m(s,l){n(s,a,l),n(s,y,l),n(s,c,l),n(s,p,l),n(s,r,l),n(s,z,l),n(s,v,l),n(s,S,l),A.m(ns,s,l),n(s,h,l),n(s,u,l),n(s,q,l),k.m(es,s,l),n(s,w,l),n(s,_,l),n(s,I,l),H.m(Fs,s,l),n(s,L,l),n(s,f,l),n(s,J,l),x.m(os,s,l),n(s,M,l),n(s,m,l),n(s,O,l),P.m(ts,s,l),n(s,b,l),n(s,C,l),n(s,Z,l),$.m(ps,s,l),n(s,j,l)},p:rs,d(s){s&&(e(a),e(y),e(c),e(p),e(r),e(z),e(v),e(S),A.d(),e(h),e(u),e(q),k.d(),e(w),e(_),e(I),H.d(),e(L),e(f),e(J),x.d(),e(M),e(m),e(O),P.d(),e(b),e(C),e(Z),e(j),$.d())}}}function Bs(B){let a,i;const y=[B[0],as];let c={$$slots:{default:[Cs]},$$scope:{ctx:B}};for(let F=0;F<y.length;F+=1)c=G(c,y[F]);return a=new fs({props:c}),{c(){Es(a.$$.fragment)},l(F){Ds(a.$$.fragment,F)},m(F,p){ds(a,F,p),i=!0},p(F,[p]){const r=p&1?ms(y,[p&1&&ls(F[0]),p&0&&ls(as)]):{};p&2&&(r.$$scope={dirty:p,ctx:F}),a.$set(r)},i(F){i||(vs(a.$$.fragment,F),i=!0)},o(F){us(a.$$.fragment,F),i=!1},d(F){_s(a,F)}}}const as={title:"TypeScript Generics",image:"",alt:"",created:"2024-03-04T00:00:00.000Z",updated:"2024-03-04T00:00:00.000Z",tags:["typescript"],images:[],slug:"/Javascript/TIL/typescript/generic/+page.md",path:"/Javascript/TIL/typescript/generic",toc:[{depth:2,title:"제네릭",slug:"제네릭"},{depth:2,title:"예시",slug:"예시"}]};function gs(B,a,i){return B.$$set=y=>{i(0,a=G(G({},a),X(y)))},a=X(a),[a]}class ks extends ys{constructor(a){super(),is(this,a,gs,Bs,cs,{})}}export{ks as component};
